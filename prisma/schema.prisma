// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Course {
  id                      Int               @id @unique @default(autoincrement())
  title                   String
  course_url              String  
  img_url                 String
  video_url               String?
  description             String?           @db.Text
  short_description       String?
  rating                  String?
  count_reviews           Int?
  count_like              String?
  count_comment           String?
  count_views             Int
  during                  String?
  last_updated            String
  created_at              DateTime          @default(now())
  updated_at              DateTime          @default(now())
  site_id                 Int        
  category_id             Int
  include                 String?           @db.MediumText // Json?   
  promo_code              String?
  price                   String?           @default("free")
  site                    Site              @relation(fields: [site_id], references: [id])
  category                Category          @relation(fields: [category_id], references: [id])
  topics                  TopicCourse[]
  comments                CourseComment[]
  details                 CourseDetail[]
  authors                 AuthorCourse[]
}

model Site {
  id                      Int               @id @unique @default(autoincrement())
  site_name               String
  site_url                String
  keywords                String
  created_at              DateTime          @default(now())
  updated_at              DateTime          @default(now())
  courses                 Course[]
  site_files              SiteFile[]
}

model SiteFile {
  id                      Int               @id @unique @default(autoincrement())
  file_url                String
  created_at              DateTime          @default(now())
  updated_at              DateTime          @default(now())
  site_id                 Int?
  site                    Site?             @relation(fields: [site_id], references: [id])
}

model Category {
  id                      Int               @id @unique @default(autoincrement())
  title                   String
  description             String?
  created_at              DateTime          @default(now())
  updated_at              DateTime          @default(now())
  courses                 Course[]
}

model Topic {
  id                      Int               @id @unique @default(autoincrement())
  title                   String
  description             String?
  created_at              DateTime          @default(now())
  updated_at              DateTime          @default(now())
  courses                 TopicCourse[]
}

model TopicCourse {
  topic_id                Int
  course_id               Int
  topic                   Topic             @relation(fields: [topic_id], references: [id])
  course                  Course            @relation(fields: [course_id], references: [id])
  created_at              DateTime          @default(now())
  updated_at              DateTime          @default(now())

  @@id([topic_id, course_id])
}

model CourseComment {
  id                      Int               @id @unique @default(autoincrement())
  title                   String
  description             String?           @db.Text
  vote                    Int?
  helpful                 Int?              @db.TinyInt
  created_at              DateTime          @default(now())
  updated_at              DateTime          @default(now())
  course_id               Int?
  course                  Course?           @relation(fields: [course_id], references: [id])
}

model CourseDetail {
  id                      Int               @id @unique @default(autoincrement())
  title                   String  
  img_url                 String
  video_url               String
  description             String?           @db.Text
  short_description       String?
  during                  String?
  created_at              DateTime          @default(now())
  updated_at              DateTime          @default(now())
  course_id               Int
  course                  Course            @relation(fields: [course_id], references: [id])
}

model Author {
  id                      Int               @id @unique @default(autoincrement())
  name                    String
  url                     String
  subscribe               String
  created_at              DateTime          @default(now())
  updated_at              DateTime          @default(now())
  courses                 AuthorCourse[]
}

model AuthorCourse {
  author_id               Int
  course_id               Int
  author                  Author            @relation(fields: [author_id], references: [id])
  course                  Course            @relation(fields: [course_id], references: [id])
  created_at              DateTime          @default(now())
  updated_at              DateTime          @default(now())

  @@id([author_id, course_id])
}
